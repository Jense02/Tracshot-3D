/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 optimized-room.glb 
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { EffectComposer, SelectiveBloom } from "@react-three/postprocessing";
import { BlendFunction } from "postprocessing";
import * as THREE from "three";

export function Target(props) {
  const { nodes, materials } = useGLTF("/models/target.glb ");

  return (
    <group {...props} dispose={null}>
      <group
        position={[0, 3, 2]}
        rotation={[-0.1, -0.15, 0.1]}
        scale={[3, 3, 3]}
      >
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group rotation={[Math.PI, 0, Math.PI / 2]} scale={100}>
              <mesh
                geometry={nodes.Cylinder_Material229_0.geometry}
                material={materials["Material.229"]}
              />
              <mesh
                geometry={nodes.Cylinder_Material230_0.geometry}
                material={materials["Material.230"]}
              />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/taget.glb");
